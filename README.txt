README

This is a hello world tutorial for machine learning using Keras/Tensorflow.

The task is given a 4x4 grid, classify it as a valid or invalid Sudoku.

There are only 288 valid grids. These are generated randomly (but I do not claim the distribution is uniform)

There are many invalid grids. They are either obtained by swapping two digits in the same row/column or
random junk with many clashes

The following configuration parameters are defined:

(i) Number of dense layers in the classifier 
(ii) Number of valid sudokus generated by gridgenerator
(iii) The file for writing and reading the raw data (17 columns, last column = label)
(iv) Number of invalid sudokus generated by gridgenerator


Usage:

(1) edit configuration file e.g. test what happens with class imbalance (200 valid vs 100 invalid)

(2) python gridgenerator.py

(3) python runclassifier.py


SAMPLE RESULTS:

NUMVALID, NUMINVALID, Number of layers, accuracy, time(sec)
100	100	1	70%	116
100	100	2	82.5%	125
100	100	3	83%	131

CREDITS:  Jason Brownlee (PhD) for the original ML code and good tutorial writing skills :-)

NOTE: There may be "proper tools" for handling configuration files. I have not done my homework here,
since my purpose in life is to provide an elementary introduction to neural networks/deep learning in
the context of Sudoku :-)

The reader is encouraged to play around with this code e.g. handle 9x9 sudokus or experiment with
non-dense layers.